{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productDeleteReducer, productDetailsReducer, productListReducer, productRegisterReducer, productUpdateReducer } from \"./reducers/product_reducers\";\nimport { categorieDeleteReducer, categorieDetailsReducer, categorieListReducer, categorieRegisterReducer, categorieUpdateReducer } from \"./reducers/categorie_reducers\";\nimport { userLoginReducer } from \"./reducers/user_reducers\";\nconst reducer = combineReducers({\n  //Aqui iran los reducers\n  //Products\n  productDelete: productDeleteReducer,\n  productDetails: productDetailsReducer,\n  productList: productListReducer,\n  productRegister: productRegisterReducer,\n  productUpdate: productUpdateReducer,\n  //Categories\n  categorieDelete: categorieDeleteReducer,\n  categorieRegister: categorieRegisterReducer,\n  categorieDetails: categorieDetailsReducer,\n  categorieList: categorieListReducer,\n  categorieUpdate: categorieUpdateReducer,\n  //Users\n  userLogin: userLoginReducer\n});\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/jordi/Documentos/work/majo-floral-design/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productDeleteReducer","productDetailsReducer","productListReducer","productRegisterReducer","productUpdateReducer","categorieDeleteReducer","categorieDetailsReducer","categorieListReducer","categorieRegisterReducer","categorieUpdateReducer","userLoginReducer","reducer","productDelete","productDetails","productList","productRegister","productUpdate","categorieDelete","categorieRegister","categorieDetails","categorieList","categorieUpdate","userLogin","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,oBADF,EAEEC,qBAFF,EAGEC,kBAHF,EAIEC,sBAJF,EAKEC,oBALF,QAMO,6BANP;AAOA,SACEC,sBADF,EAEEC,uBAFF,EAGEC,oBAHF,EAIEC,wBAJF,EAKEC,sBALF,QAMO,+BANP;AAOA,SAASC,gBAAT,QAAiC,0BAAjC;AAEA,MAAMC,OAAO,GAAGf,eAAe,CAAC;AAC9B;AACA;AACAgB,EAAAA,aAAa,EAAEZ,oBAHe;AAI9Ba,EAAAA,cAAc,EAAEZ,qBAJc;AAK9Ba,EAAAA,WAAW,EAAEZ,kBALiB;AAM9Ba,EAAAA,eAAe,EAAEZ,sBANa;AAO9Ba,EAAAA,aAAa,EAAEZ,oBAPe;AAQ9B;AACAa,EAAAA,eAAe,EAAEZ,sBATa;AAU9Ba,EAAAA,iBAAiB,EAAEV,wBAVW;AAW9BW,EAAAA,gBAAgB,EAAEb,uBAXY;AAY9Bc,EAAAA,aAAa,EAAEb,oBAZe;AAa9Bc,EAAAA,eAAe,EAAEZ,sBAba;AAc9B;AACAa,EAAAA,SAAS,EAAEZ;AAfmB,CAAD,CAA/B;AAkBA,MAAMa,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAG;AACnBN,EAAAA,SAAS,EAAE;AAAEO,IAAAA,QAAQ,EAAEN;AAAZ;AADQ,CAArB;AAIA,MAAMO,UAAU,GAAG,CAAChC,KAAD,CAAnB;AAEA,MAAMiC,KAAK,GAAGpC,WAAW,CACvBgB,OADuB,EAEvBiB,YAFuB,EAGvB7B,mBAAmB,CAACF,eAAe,CAAC,GAAGiC,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productDeleteReducer,\n  productDetailsReducer,\n  productListReducer,\n  productRegisterReducer,\n  productUpdateReducer,\n} from \"./reducers/product_reducers\";\nimport {\n  categorieDeleteReducer,\n  categorieDetailsReducer,\n  categorieListReducer,\n  categorieRegisterReducer,\n  categorieUpdateReducer,\n} from \"./reducers/categorie_reducers\";\nimport { userLoginReducer } from \"./reducers/user_reducers\";\n\nconst reducer = combineReducers({\n  //Aqui iran los reducers\n  //Products\n  productDelete: productDeleteReducer,\n  productDetails: productDetailsReducer,\n  productList: productListReducer,\n  productRegister: productRegisterReducer,\n  productUpdate: productUpdateReducer,\n  //Categories\n  categorieDelete: categorieDeleteReducer,\n  categorieRegister: categorieRegisterReducer,\n  categorieDetails: categorieDetailsReducer,\n  categorieList: categorieListReducer,\n  categorieUpdate: categorieUpdateReducer,\n  //Users\n  userLogin: userLoginReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}