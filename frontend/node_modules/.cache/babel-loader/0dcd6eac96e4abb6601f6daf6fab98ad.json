{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Documents\\\\Proyects\\\\Majo Floral Design\\\\frontend\\\\src\\\\views\\\\EditProductScreen\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Form } from \"react-bootstrap\";\nimport FormContainer from \"../../components/FormContainer\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport Paginator from \"../../components/Paginator\";\nimport { productDetails, updateProduct } from \"../../actions/product_actions\";\nimport { listCategories } from \"../../actions/categorie_actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditProductScreen({\n  match,\n  history\n}) {\n  _s();\n\n  /*Vars for creation of product*/\n  const productId = match.params.id;\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [isUploading, setIsUploading] = useState(false);\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const dispatch = useDispatch();\n  const categorieList = useSelector(state => state.categorieList);\n  const {\n    error: errorCategories,\n    loading: loadingCategories,\n    success: successCategories,\n    categories\n  } = categorieList;\n  useEffect(() => {\n    dispatch(listCategories());\n  }, [dispatch]);\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    formData.append(\"product_id\", productId);\n    setIsUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"/api/products/upload/\", formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      setIsUploading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"10vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            width: \"100%\"\n          },\n          children: \"Editar producto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Ingresa el nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"desc\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Descripci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              placeholder: \"Ingresa los detalles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Precio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              placeholder: \"Ingresa el precio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"categorie\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Categor\\xEDa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              custom: true,\n              children: successCategories && (categories === null || categories === void 0 ? void 0 : categories.map(categorie => /*#__PURE__*/_jsxDEV(\"option\", {\n                children: [categorie.name, \"dsds\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this)))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"image\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Imagen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Ingresa la imagen\",\n              value: image,\n              onChange: e => setImage(e.target.value),\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n              id: \"image-file\",\n              label: \"Elegir un archivo\",\n              custom: true,\n              onChange: uploadFileHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), isUploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"stock\",\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"checkbox\",\n              label: \"Â¿Disponible en stock?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            children: \"Actualizar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProductScreen, \"UjwE2v1WFbYNbj5ooSNyBhwPTeI=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = EditProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProductScreen\");","map":{"version":3,"sources":["C:/Users/dell/Documents/Proyects/Majo Floral Design/frontend/src/views/EditProductScreen/index.js"],"names":["React","useState","useEffect","axios","useDispatch","useSelector","Button","Form","FormContainer","Loader","Message","Paginator","productDetails","updateProduct","listCategories","EditProductScreen","match","history","productId","params","id","name","setName","description","setDescription","price","setPrice","image","setImage","isUploading","setIsUploading","userLogin","state","userInfo","dispatch","categorieList","error","errorCategories","loading","loadingCategories","success","successCategories","categories","uploadFileHandler","e","file","target","files","formData","FormData","append","config","headers","Authorization","token","data","post","setUploading","marginTop","width","map","categorie","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport FormContainer from \"../../components/FormContainer\";\r\n\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\nimport Paginator from \"../../components/Paginator\";\r\n\r\nimport { productDetails, updateProduct } from \"../../actions/product_actions\";\r\nimport { listCategories } from \"../../actions/categorie_actions\";\r\nexport default function EditProductScreen({ match, history }) {\r\n  /*Vars for creation of product*/\r\n  const productId = match.params.id;\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [isUploading, setIsUploading] = useState(false);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const categorieList = useSelector((state) => state.categorieList);\r\n  const {\r\n    error: errorCategories,\r\n    loading: loadingCategories,\r\n    success: successCategories,\r\n    categories,\r\n  } = categorieList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listCategories());\r\n  }, [dispatch]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"image\", file);\r\n    formData.append(\"product_id\", productId);\r\n\r\n    setIsUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        \"/api/products/upload/\",\r\n        formData,\r\n        config\r\n      );\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ marginTop: \"10vh\" }}>\r\n      <>\r\n        <FormContainer>\r\n          <h1 style={{ width: \"100%\" }}>Editar producto</h1>\r\n          <Form>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Nombre</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Ingresa el nombre\"\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"desc\">\r\n              <Form.Label>DescripciÃ³n</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                placeholder=\"Ingresa los detalles\"\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Precio</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Ingresa el precio\"\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"categorie\">\r\n              <Form.Label>CategorÃ­a</Form.Label>\r\n              <Form.Control as=\"select\" custom>\r\n                {successCategories &&\r\n                  categories?.map((categorie) => (\r\n                    <option>{categorie.name}dsds</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>Imagen</Form.Label>\r\n              {/* {service?.image && (\r\n                <Image\r\n                  className=\"d-block my-4\"\r\n                  style={{ maxWidth: \"330px\" }}\r\n                  xs={6}\r\n                  md={4}\r\n                  src={`https://res.cloudinary.com/dental-clark/${service.image}`}\r\n                />\r\n              )} */}\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Ingresa la imagen\"\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n                readOnly={true}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id=\"image-file\"\r\n                label=\"Elegir un archivo\"\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {isUploading && <Loader />}\r\n            </Form.Group>\r\n            <Form.Group controlId=\"stock\">\r\n              <Form.Check\r\n                type={\"checkbox\"}\r\n                label={\"Â¿Disponible en stock?\"}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n            <Button variant=\"primary\">Actualizar</Button>\r\n          </Form>\r\n        </FormContainer>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}